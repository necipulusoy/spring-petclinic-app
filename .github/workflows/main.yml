name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Ana branşınızı belirtin
  workflow_dispatch:  # Manuel tetikleme için ayar

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      # 1. Adım: Repository'deki en son kodu al

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      # 2. Adım: Docker Buildx'i kur

    - name: Build Docker image with SHA tag
      run: |
        TAG=${{ github.sha }}  # SHA değerini tag olarak kullan
        docker build -t necipulusoyy9120/spring-petclinic-app:$TAG -f application/Dockerfile application/
      # 3. Adım: Docker image'ı SHA tag'i ile oluştur

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      # 4. Adım: Docker Hub'a giriş yap

    - name: Push Docker image to Docker Hub
      run: |
        docker push necipulusoyy9120/spring-petclinic-app:$TAG
      # 5. Adım: Oluşan Docker image'ı Docker Hub'a gönder

    - name: Set up Kubeconfig
      run: |
        mkdir -p $HOME/.kube  # .kube dizinini oluştur
        echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config  # Kubeconfig dosyasını ayarla
        chmod 600 $HOME/.kube/config  # Kubeconfig dosyasının izinlerini ayarla
        kubectl get nodes
      # 6. Adım: Kubeconfig'i yapılandır

    - name: Update image tag in values.yaml
      run: |
        sed -i "s|image: \"necipulusoyy9120/spring-petclinic-app:.*\"|image: \"necipulusoyy9120/spring-petclinic-app:$TAG\"|g" helm/values.yaml
      # 7. Adım: values.yaml dosyasındaki image değerini yeni SHA tag ile güncelle

    - name: Deploy to Kubernetes Cluster
      run: |
        helm upgrade --install helm ./helm/-n prod
      # 8. Adım: Güncellenmiş Helm chart'ı Kubernetes cluster'ına dağıt
